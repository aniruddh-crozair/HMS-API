# Generated by Django 5.2.6 on 2025-09-27 06:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('owners', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hoarding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('mounting_type', models.CharField(choices=[('Unipole', 'Unipole'), ('Multipole', 'Multipole'), ('Cantilever', 'Cantilever'), ('Gantry', 'Gantry')], max_length=32)),
                ('height', models.FloatField()),
                ('length', models.FloatField()),
                ('breadth', models.FloatField()),
                ('facing', models.CharField(choices=[('North', 'North'), ('South', 'South'), ('East', 'East'), ('West', 'West'), ('Northeast', 'Northeast'), ('Northwest', 'Northwest'), ('Southeast', 'Southeast'), ('Southwest', 'Southwest')], max_length=16)),
                ('illumination', models.CharField(choices=[('External', 'External'), ('Internal', 'Internal')], max_length=16)),
                ('material_type', models.CharField(choices=[('Timber', 'Timber'), ('Steel', 'Steel'), ('Water-Filled Barriers', 'Water-Filled Barriers'), ('Concrete', 'Concrete'), ('Mesh Panel', 'Mesh Panel')], max_length=32)),
                ('suggested_purpose', models.CharField(choices=[('Event', 'Event'), ('Retail', 'Retail'), ('Community Engagement', 'Community Engagement'), ('Development', 'Development'), ('Informational', 'Informational'), ('Other', 'Other')], max_length=32)),
                ('monthly_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('availability_status', models.CharField(choices=[('available', 'Available'), ('booked', 'Booked'), ('maintenance', 'Maintenance')], default='available', max_length=16)),
                ('rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=2)),
                ('is_available', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('master_img_url', models.URLField(blank=True)),
                ('weather_resistant_material', models.CharField(blank=True, choices=[('UV-coated vinyl', 'UV-coated vinyl'), ('Aluminum', 'Aluminum'), ('Other', 'Other')], max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hoardings', to='owners.owner')),
            ],
            options={
                'db_table': 'hoarding',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='HoardingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line', models.CharField(max_length=512)),
                ('city', models.CharField(max_length=128)),
                ('state', models.CharField(max_length=128)),
                ('pincode', models.CharField(max_length=32)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('location_type', models.CharField(choices=[('High traffic', 'High traffic'), ('Residential', 'Residential'), ('Commercial', 'Commercial'), ('Highway', 'Highway'), ('Other', 'Other')], default='Other', max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hoarding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='inventory.hoarding')),
            ],
            options={
                'db_table': 'hoarding_address',
            },
        ),
        migrations.CreateModel(
            name='HoardingImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField()),
                ('is_primary', models.BooleanField(default=False)),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('hoarding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='inventory.hoarding')),
            ],
            options={
                'db_table': 'hoarding_image',
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('maintainer', models.CharField(max_length=255)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hoarding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='inventory.hoarding')),
            ],
            options={
                'db_table': 'maintenance',
                'ordering': ['-start_date'],
            },
        ),
    ]
